# This OpenAPI specification is auto-generated from TypeScript Schemas
# DO NOT EDIT THIS FILE MANUALLY

openapi: 3.0.0
info:
  title: Scope3 Agentic API
  version: 1.0.0
  description: >-
    Comprehensive API for the Scope3 Agentic Advertising Platform.

    This API provides tools for managing brand agents, campaigns, creatives, tactics, media buys, and more through
    natural language interfaces and structured endpoints.
servers:
  - url: https://api.agentic.scope3.com/mcp
    description: Production server
  - url: https://api.agentic.staging.scope3.com/mcp
    description: Staging server
paths:
  /mcp-initialize:
    post:
      operationId: mcp_initialize
      summary: Initialize MCP session
      description: >-
        Initialize a new MCP session. This must be called before using any tools. The session ID should be generated as
        a UUID and included in the mcp-session-id header for all subsequent requests.
      tags:
        - MCP
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: MCP session identifier (UUID). Generate a new UUID for session initialization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum:
                    - '2.0'
                id:
                  oneOf:
                    - type: string
                    - type: number
                method:
                  type: string
                  enum:
                    - initialize
                params:
                  type: object
                  properties:
                    protocolVersion:
                      type: string
                      example: '2024-11-05'
                    capabilities:
                      type: object
                    clientInfo:
                      type: object
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      required:
                        - name
                        - version
                  required:
                    - protocolVersion
                    - capabilities
                    - clientInfo
              required:
                - jsonrpc
                - id
                - method
                - params
      responses:
        '200':
          description: Session initialized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum:
                      - '2.0'
                  id:
                    oneOf:
                      - type: string
                      - type: number
                  result:
                    type: object
                    properties:
                      protocolVersion:
                        type: string
                      capabilities:
                        type: object
                      serverInfo:
                        type: object
                        properties:
                          name:
                            type: string
                          version:
                            type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
  /brand-agent-list:
    post:
      operationId: brand_agent_list
      summary: List brand agents
      description: >-
        List all brand agents (advertiser accounts) for the authenticated customer. Authentication is automatic - no
        parameters required.
      tags:
        - Brand Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_agent_list
                arguments:
                  $ref: '#/components/schemas/ListBrandAgentsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandAgentList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-agent-get:
    post:
      operationId: brand_agent_get
      summary: Get brand agent
      description: Get detailed information about a specific brand agent (advertiser account) by ID.
      tags:
        - Brand Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_agent_get
                arguments:
                  $ref: '#/components/schemas/GetBrandAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandAgentUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-agent-create:
    post:
      operationId: brand_agent_create
      summary: Create brand agent
      description: >-
        Create a new brand agent (advertiser account). This creates the top-level container that will own campaigns,
        creatives, audiences, standards, and measurement sources.
      tags:
        - Brand Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_agent_create
                arguments:
                  $ref: '#/components/schemas/CreateBrandAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandAgentUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-agent-update:
    post:
      operationId: brand_agent_update
      summary: Update brand agent
      description: Update an existing brand agent with new information.
      tags:
        - Brand Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_agent_update
                arguments:
                  $ref: '#/components/schemas/UpdateBrandAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandAgentUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-agent-delete:
    post:
      operationId: brand_agent_delete
      summary: Delete brand agent
      description: Delete a brand agent. This will also delete all associated campaigns, creatives, and other resources.
      tags:
        - Brand Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_agent_delete
                arguments:
                  $ref: '#/components/schemas/DeleteBrandAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandAgentDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-list:
    post:
      operationId: campaign_list
      summary: List campaigns
      description: List all campaigns with optional filtering by brand agent.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_list
                arguments:
                  $ref: '#/components/schemas/ListCampaignsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-create:
    post:
      operationId: campaign_create
      summary: Create campaign
      description: >-
        Create a new campaign with natural language prompt. The backend will parse the prompt to extract targeting,
        budget, and creative requirements.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_create
                arguments:
                  $ref: '#/components/schemas/CreateCampaignInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-get:
    post:
      operationId: campaign_get
      summary: Get campaign
      description: Get detailed information about a specific campaign.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_get
                arguments:
                  $ref: '#/components/schemas/GetCampaignInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-update:
    post:
      operationId: campaign_update
      summary: Update campaign
      description: Update an existing campaign with new information.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_update
                arguments:
                  $ref: '#/components/schemas/UpdateCampaignInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignUpdateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-delete:
    post:
      operationId: campaign_delete
      summary: Delete campaign
      description: Delete a campaign and all associated resources.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_delete
                arguments:
                  $ref: '#/components/schemas/DeleteCampaignInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-get-summary:
    post:
      operationId: campaign_get_summary
      summary: Get campaign summary
      description: Get a high-level summary of a campaign including key metrics and status.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_get_summary
                arguments:
                  $ref: '#/components/schemas/GetCampaignSummaryInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignGetSummary'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-list-tactics:
    post:
      operationId: campaign_list_tactics
      summary: List campaign tactics
      description: List all tactics associated with a specific campaign.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_list_tactics
                arguments:
                  $ref: '#/components/schemas/ListCampaignTacticsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignListTactics'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /campaign-validate-brief:
    post:
      operationId: campaign_validate_brief
      summary: Validate campaign brief
      description: Validate a campaign brief to ensure it contains all necessary information for campaign creation.
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - campaign_validate_brief
                arguments:
                  $ref: '#/components/schemas/ValidateBriefInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CampaignValidateBrief'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /asset-list:
    post:
      operationId: asset_list
      summary: List assets
      description: List all uploaded assets with optional filtering by brand agent.
      tags:
        - Assets
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - asset_list
                arguments:
                  $ref: '#/components/schemas/ListAssetsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/AssetList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-standards-create:
    post:
      operationId: brand_standards_create
      summary: Create brand standards
      description: >-
        Create brand standards including guidelines, tone of voice, visual requirements, and content rules for a brand
        agent.
      tags:
        - Brand Standards
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_standards_create
                arguments:
                  $ref: '#/components/schemas/CreateBrandStandardInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStandardsCreateOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-standards-delete:
    post:
      operationId: brand_standards_delete
      summary: Delete brand standards
      description: Delete brand standards for a brand agent.
      tags:
        - Brand Standards
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_standards_delete
                arguments:
                  $ref: '#/components/schemas/DeleteBrandStandardInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStandardsDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-standards-list:
    post:
      operationId: brand_standards_list
      summary: List brand standards
      description: List all brand standards with optional filtering by brand agent.
      tags:
        - Brand Standards
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_standards_list
                arguments:
                  $ref: '#/components/schemas/ListBrandStandardsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStandardsList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-story-create:
    post:
      operationId: brand_story_create
      summary: Create brand story
      description: Create a brand story containing the narrative, history, values, and key messaging for a brand agent.
      tags:
        - Brand Stories
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_story_create
                arguments:
                  $ref: '#/components/schemas/CreateBrandStoryInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStoryCreate'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-story-update:
    post:
      operationId: brand_story_update
      summary: Update brand story
      description: Update an existing brand story with new information.
      tags:
        - Brand Stories
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_story_update
                arguments:
                  $ref: '#/components/schemas/UpdateBrandStoryInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStoryUpdate'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-story-delete:
    post:
      operationId: brand_story_delete
      summary: Delete brand story
      description: Delete a brand story.
      tags:
        - Brand Stories
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_story_delete
                arguments:
                  $ref: '#/components/schemas/DeleteBrandStoryInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStoryDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /brand-story-list:
    post:
      operationId: brand_story_list
      summary: List brand stories
      description: List all brand stories with optional filtering by brand agent.
      tags:
        - Brand Stories
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - brand_story_list
                arguments:
                  $ref: '#/components/schemas/ListBrandStoriesInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/BrandStoryList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /channel-list:
    post:
      operationId: channel_list
      summary: List channels
      description: List all available advertising channels and platforms.
      tags:
        - Channels
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - channel_list
                arguments:
                  $ref: '#/components/schemas/ListChannelsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/ChannelList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-assign:
    post:
      operationId: creative_assign
      summary: Assign creative
      description: Assign a creative to a tactic or media buy.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_assign
                arguments:
                  $ref: '#/components/schemas/AssignCreativeInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeAssign'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-create:
    post:
      operationId: creative_create
      summary: Create creative
      description: Create a new creative with assets, copy, and targeting specifications.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_create
                arguments:
                  $ref: '#/components/schemas/CreateCreativeInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-update:
    post:
      operationId: creative_update
      summary: Update creative
      description: Update an existing creative with new assets, copy, or specifications.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_update
                arguments:
                  $ref: '#/components/schemas/UpdateCreativeInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-delete:
    post:
      operationId: creative_delete
      summary: Delete creative
      description: Delete a creative and remove it from any associated tactics or media buys.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_delete
                arguments:
                  $ref: '#/components/schemas/DeleteCreativeInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-get:
    post:
      operationId: creative_get
      summary: Get creative
      description: Get detailed information about a specific creative.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_get
                arguments:
                  $ref: '#/components/schemas/GetCreativeInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-list:
    post:
      operationId: creative_list
      summary: List creatives
      description: List all creatives with optional filtering by brand agent or campaign.
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_list
                arguments:
                  $ref: '#/components/schemas/ListCreativesInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /creative-sync-sales-agents:
    post:
      operationId: creative_sync_sales_agents
      summary: Sync creatives to sales agents
      description: Synchronize creatives to connected sales agents (DSPs, publisher platforms).
      tags:
        - Creatives
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - creative_sync_sales_agents
                arguments:
                  $ref: '#/components/schemas/SyncSalesAgentsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/CreativeSyncSalesAgents'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-create:
    post:
      operationId: media_buy_create
      summary: Create media buy
      description: Create a new media buy with budget, targeting, and creative specifications.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_create
                arguments:
                  $ref: '#/components/schemas/CreateMediaBuyInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-update:
    post:
      operationId: media_buy_update
      summary: Update media buy
      description: Update an existing media buy with new budget, targeting, or creative assignments.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_update
                arguments:
                  $ref: '#/components/schemas/UpdateMediaBuyInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-delete:
    post:
      operationId: media_buy_delete
      summary: Delete media buy
      description: Delete a media buy and cancel any active placements.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_delete
                arguments:
                  $ref: '#/components/schemas/DeleteMediaBuyInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-execute:
    post:
      operationId: media_buy_execute
      summary: Execute media buy
      description: Execute a media buy, sending it to the configured sales agents for placement.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_execute
                arguments:
                  $ref: '#/components/schemas/ExecuteMediaBuyInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyExecute'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-get:
    post:
      operationId: media_buy_get
      summary: Get media buy
      description: Get detailed information about a specific media buy.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_get
                arguments:
                  $ref: '#/components/schemas/GetMediaBuyInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-list:
    post:
      operationId: media_buy_list
      summary: List media buys
      description: List all media buys with optional filtering by brand agent, campaign, or status.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_list
                arguments:
                  $ref: '#/components/schemas/ListMediaBuysInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-buy-validate-budget:
    post:
      operationId: media_buy_validate_budget
      summary: Validate media buy budget
      description: Validate a media buy budget against campaign constraints and available funds.
      tags:
        - Media Buys
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_buy_validate_budget
                arguments:
                  $ref: '#/components/schemas/ValidateMediaBuyBudgetInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaBuyValidateBudget'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /notifications-list:
    post:
      operationId: notifications_list
      summary: List notifications
      description: List notifications for the authenticated user with optional filtering by status.
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - notifications_list
                arguments:
                  $ref: '#/components/schemas/ListNotificationsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/NotificationsList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /notifications-mark-read:
    post:
      operationId: notifications_mark_read
      summary: Mark notification as read
      description: Mark a specific notification as read.
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - notifications_mark_read
                arguments:
                  $ref: '#/components/schemas/MarkNotificationReadInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/NotificationsMarkRead'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /notifications-mark-acknowledged:
    post:
      operationId: notifications_mark_acknowledged
      summary: Mark notification as acknowledged
      description: Mark a specific notification as acknowledged.
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - notifications_mark_acknowledged
                arguments:
                  $ref: '#/components/schemas/MarkNotificationAcknowledgedInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/NotificationsMarkAcknowledged'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /notifications-mark-all-read:
    post:
      operationId: notifications_mark_all_read
      summary: Mark all notifications as read
      description: Mark all notifications for the authenticated user as read.
      tags:
        - Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - notifications_mark_all_read
                arguments:
                  $ref: '#/components/schemas/MarkAllNotificationsReadInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/NotificationsMarkAllRead'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-product-discover:
    post:
      operationId: media_product_discover
      summary: Discover media products
      description: Discover available media products from connected sales agents based on targeting criteria.
      tags:
        - Media Products
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_product_discover
                arguments:
                  $ref: '#/components/schemas/DiscoverProductsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaProductDiscover'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-product-save:
    post:
      operationId: media_product_save
      summary: Save media product
      description: Save a discovered media product for future use in media buys.
      tags:
        - Media Products
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_product_save
                arguments:
                  $ref: '#/components/schemas/SaveProductInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaProductSave'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-product-list:
    post:
      operationId: media_product_list
      summary: List media products
      description: List saved media products with optional filtering.
      tags:
        - Media Products
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_product_list
                arguments:
                  $ref: '#/components/schemas/ListProductsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaProductList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /media-product-sync:
    post:
      operationId: media_product_sync
      summary: Sync media products
      description: Synchronize media product catalog from connected sales agents.
      tags:
        - Media Products
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - media_product_sync
                arguments:
                  $ref: '#/components/schemas/SyncProductsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/MediaProductSync'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-get:
    post:
      operationId: sales_agent_get
      summary: Get sales agent
      description: Get detailed information about a specific sales agent (DSP, publisher platform).
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_get
                arguments:
                  $ref: '#/components/schemas/GetSalesAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentGet'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-list:
    post:
      operationId: sales_agent_list
      summary: List sales agents
      description: List all registered sales agents (DSPs, publisher platforms).
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_list
                arguments:
                  $ref: '#/components/schemas/ListSalesAgentsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-register:
    post:
      operationId: sales_agent_register
      summary: Register sales agent
      description: Register a new sales agent (DSP, publisher platform) for media buying.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_register
                arguments:
                  $ref: '#/components/schemas/RegisterSalesAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentRegister'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-unregister:
    post:
      operationId: sales_agent_unregister
      summary: Unregister sales agent
      description: Unregister a sales agent and disconnect it from the platform.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_unregister
                arguments:
                  $ref: '#/components/schemas/UnregisterSalesAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentUnregister'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-update:
    post:
      operationId: sales_agent_update
      summary: Update sales agent
      description: Update sales agent configuration and credentials.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_update
                arguments:
                  $ref: '#/components/schemas/UpdateSalesAgentInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentUpdate'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-account-list:
    post:
      operationId: sales_agent_account_list
      summary: List sales agent accounts
      description: List all accounts (seats, advertisers) within a sales agent.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_account_list
                arguments:
                  $ref: '#/components/schemas/ListSalesAgentAccountsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentAccountList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-account-register:
    post:
      operationId: sales_agent_account_register
      summary: Register sales agent account
      description: Register a new account (seat, advertiser) within a sales agent.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_account_register
                arguments:
                  $ref: '#/components/schemas/RegisterSalesAgentAccountInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentAccountRegister'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-account-unregister:
    post:
      operationId: sales_agent_account_unregister
      summary: Unregister sales agent account
      description: Unregister an account from a sales agent.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_account_unregister
                arguments:
                  $ref: '#/components/schemas/UnregisterSalesAgentAccountInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentAccountUnregister'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /sales-agent-account-update:
    post:
      operationId: sales_agent_account_update
      summary: Update sales agent account
      description: Update account configuration within a sales agent.
      tags:
        - Sales Agents
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - sales_agent_account_update
                arguments:
                  $ref: '#/components/schemas/UpdateSalesAgentAccountInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/SalesAgentAccountUpdate'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-create:
    post:
      operationId: tactic_create
      summary: Create tactic
      description: Create a new tactic defining how to achieve campaign objectives.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_create
                arguments:
                  $ref: '#/components/schemas/CreateTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticCreate'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-update:
    post:
      operationId: tactic_update
      summary: Update tactic
      description: Update an existing tactic with new targeting, budget, or creative requirements.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_update
                arguments:
                  $ref: '#/components/schemas/UpdateTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-delete:
    post:
      operationId: tactic_delete
      summary: Delete tactic
      description: Delete a tactic and all associated media buys.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_delete
                arguments:
                  $ref: '#/components/schemas/DeleteTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-get:
    post:
      operationId: tactic_get
      summary: Get tactic
      description: Get detailed information about a specific tactic.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_get
                arguments:
                  $ref: '#/components/schemas/GetTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticGetOutput'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-list:
    post:
      operationId: tactic_list
      summary: List tactics
      description: List all tactics with optional filtering by brand agent or campaign.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_list
                arguments:
                  $ref: '#/components/schemas/ListTacticsInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-link-campaign:
    post:
      operationId: tactic_link_campaign
      summary: Link tactic to campaign
      description: Link a tactic to a campaign.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_link_campaign
                arguments:
                  $ref: '#/components/schemas/LinkCampaignToTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticLinkCampaign'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /tactic-unlink-campaign:
    post:
      operationId: tactic_unlink_campaign
      summary: Unlink tactic from campaign
      description: Unlink a tactic from a campaign.
      tags:
        - Tactics
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - tactic_unlink_campaign
                arguments:
                  $ref: '#/components/schemas/UnlinkCampaignFromTacticInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/TacticUnlinkCampaign'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /webhook-register:
    post:
      operationId: webhook_register
      summary: Register webhook
      description: Register a webhook to receive real-time notifications about events.
      tags:
        - Webhooks
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - webhook_register
                arguments:
                  $ref: '#/components/schemas/RegisterWebhookInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/WebhookRegister'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /webhook-list:
    post:
      operationId: webhook_list
      summary: List webhooks
      description: List all registered webhooks.
      tags:
        - Webhooks
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - webhook_list
                arguments:
                  $ref: '#/components/schemas/ListWebhooksInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/WebhookList'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /webhook-delete:
    post:
      operationId: webhook_delete
      summary: Delete webhook
      description: Delete a registered webhook.
      tags:
        - Webhooks
      security:
        - bearerAuth: []
      parameters:
        - name: mcp-session-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: >-
            MCP session identifier (UUID). Initialize your session using the /mcp-initialize endpoint first to obtain a
            session ID, then reuse it for all subsequent tool requests in the same session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tool:
                  type: string
                  enum:
                    - webhook_delete
                arguments:
                  $ref: '#/components/schemas/DeleteWebhookInput'
              required:
                - tool
                - arguments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/MCPContent'
                  structuredContent:
                    $ref: '#/components/schemas/WebhookDelete'
                required:
                  - content
                  - structuredContent
                additionalProperties: false
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
components:
  schemas:
    ListAssetsInput:
      type: object
      properties:
        brandAgentId:
          description: Optional brand agent ID to filter assets
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
    ListBrandAgentsInput:
      description: Parameters for listing brand agents. Authentication is automatic.
      type: object
      properties:
        where:
          description: Prisma-style where clause for filtering agents
          type: object
          additionalProperties: {}
        orderBy:
          description: Prisma-style orderBy clause
          type: object
          additionalProperties: {}
        take:
          description: Number of records to return
          example: 10
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          description: Number of records to skip
          example: 0
          type: integer
          minimum: 0
          maximum: 9007199254740991
        distinct:
          description: Fields to use for distinct selection
          type: array
          items:
            type: string
    GetBrandAgentInput:
      description: Parameters for retrieving a specific brand agent
      type: object
      properties:
        brandAgentId:
          description: The unique identifier for the brand agent
          example: 123
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
      required:
        - brandAgentId
    CreateBrandAgentInput:
      description: Parameters for creating a new brand agent
      type: object
      properties:
        name:
          description: Name of the brand agent (advertiser account)
          example: Nike Global Campaigns
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Optional description of the brand agent
          example: Brand agent for Nike global advertising campaigns
          type: string
          maxLength: 1000
        manifestUrl:
          description: URL to the brand manifest
          example: https://example.com/brand-manifest
          type: string
          format: uri
        channels:
          description: Advertising channels to enable
          example:
            - app
            - display
            - ctv
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        countryCodes:
          description: Country codes (ISO 3166-1 alpha-2)
          example:
            - US
            - CA
            - GB
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 2
        languages:
          description: Language codes (ISO 639-1)
          example:
            - en
            - es
            - fr
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 2
      required:
        - name
    UpdateBrandAgentInput:
      description: Parameters for updating a brand agent
      type: object
      properties:
        brandAgentId:
          description: The unique identifier for the brand agent
          example: 123
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          description: Updated name of the brand agent
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Updated description
          type: string
          maxLength: 1000
        manifestUrl:
          description: Updated URL to the brand manifest
          example: https://example.com/brand-manifest
          type: string
          format: uri
        channels:
          description: Updated channels
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        countryCodes:
          description: Updated country codes
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 2
        languages:
          description: Updated language codes
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 2
      required:
        - brandAgentId
    DeleteBrandAgentInput:
      description: Parameters for deleting a brand agent
      type: object
      properties:
        brandAgentId:
          description: The unique identifier for the brand agent to delete
          example: 123
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
      required:
        - brandAgentId
    CreateBrandStandardInput:
      type: object
      properties:
        brandAgentId:
          description: Brand agent ID
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          description: Standard name
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Standard description
          type: string
        prompt:
          description: Brand standards prompt
          type: string
          minLength: 1
        isPrimary:
          description: Whether this is the primary standard
          type: boolean
        countries:
          description: Country codes
          type: array
          items:
            type: string
        channels:
          description: Channel types
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        brands:
          description: Brand names
          type: array
          items:
            type: string
      required:
        - brandAgentId
        - prompt
    DeleteBrandStandardInput:
      type: object
      properties:
        brandStandardId:
          description: Brand standard ID
          type: string
      required:
        - brandStandardId
    ListBrandStandardsInput:
      type: object
      properties:
        where:
          description: Prisma-style where clause for filtering standards
          type: object
          additionalProperties: {}
        orderBy:
          description: Prisma-style orderBy clause
          type: object
          additionalProperties: {}
        take:
          description: Number of records to return
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          description: Number of records to skip
          type: integer
          minimum: 0
          maximum: 9007199254740991
        distinct:
          description: Fields to use for distinct selection
          type: array
          items:
            type: string
    CreateBrandStoryInput:
      type: object
      properties:
        brandAgentId:
          description: Brand agent ID (bigint or string)
          anyOf:
            - type: integer
              format: int64
            - type: string
        name:
          description: Story name
          type: string
          minLength: 1
          maxLength: 255
        description:
          description: Story description
          type: string
        prompt:
          description: Brand story prompt
          type: string
        isPrimary:
          description: Whether this is the primary story
          type: boolean
        channelCodes:
          description: Channel codes
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        countryCodes:
          description: Country codes
          type: array
          items:
            type: string
        brands:
          description: Brand names
          type: array
          items:
            type: string
        languages:
          description: Language codes
          type: array
          items:
            type: string
      required:
        - brandAgentId
        - name
        - isPrimary
    UpdateBrandStoryInput:
      type: object
      properties:
        name:
          description: Story name
          type: string
        previousModelId:
          description: Previous model ID (bigint or string)
          anyOf:
            - type: integer
              format: int64
            - type: string
        prompt:
          description: Updated brand story prompt
          type: string
          minLength: 1
      required:
        - previousModelId
        - prompt
    DeleteBrandStoryInput:
      type: object
      properties:
        brandStoryId:
          description: Brand story ID
          type: string
      required:
        - brandStoryId
    ListBrandStoriesInput:
      type: object
      properties:
        where:
          description: Filtering criteria
          type: object
          additionalProperties: {}
        orderBy:
          description: Ordering criteria
          type: object
          additionalProperties: {}
        take:
          description: Number of records to return
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          description: Number of records to skip
          type: integer
          minimum: 0
          maximum: 9007199254740991
        distinct:
          description: Fields to use for distinct selection
          type: array
          items:
            type: string
    ListCampaignsInput:
      description: Parameters for listing campaigns
      type: object
      properties:
        brandAgentId:
          description: Filter by brand agent ID
          example: 123
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        status:
          description: Filter by campaign status
          type: string
          enum:
            - ACTIVE
            - PAUSED
            - ARCHIVED
            - DRAFT
        limit:
          description: Number of results to return
          example: 50
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        offset:
          description: Number of results to skip for pagination
          example: 0
          type: integer
          minimum: 0
          maximum: 9007199254740991
    CreateCampaignInput:
      description: Parameters for creating a new campaign
      type: object
      properties:
        brandAgentId:
          description: Brand agent ID that will own this campaign
          example: 123
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          description: Optional name for the campaign (auto-generated if not provided)
          example: Summer 2025 Tech Campaign
          type: string
          minLength: 1
          maxLength: 255
        prompt:
          description: >-
            Natural language description of campaign requirements. The backend will parse this to extract targeting,
            budget, and creative requirements.
          example: Create a video campaign targeting tech enthusiasts aged 25-45 with $50k budget
          type: string
          minLength: 10
        budget:
          description: Budget configuration for the campaign
          type: object
          properties:
            total:
              type: number
              minimum: 0
              exclusiveMinimum: true
            currency:
              default: USD
              type: string
              minLength: 3
              maxLength: 3
            dailyCap:
              type: number
              minimum: 0
              exclusiveMinimum: true
            pacing:
              type: string
              enum:
                - EVEN
                - ASAP
                - FRONTLOADED
          required:
            - total
        startDate:
          description: Campaign start date (ISO 8601 format)
          example: '2025-01-15T00:00:00Z'
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        endDate:
          description: Campaign end date (ISO 8601 format)
          example: '2025-03-31T23:59:59Z'
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        scoringWeights:
          description: Scoring weights for campaign optimization
          type: object
          properties:
            affinity:
              type: number
              minimum: 0
              maximum: 1
            outcome:
              type: number
              minimum: 0
              maximum: 1
            quality:
              type: number
              minimum: 0
              maximum: 1
        outcomeScoreWindowDays:
          description: Number of days for outcome measurement window
          example: 30
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        status:
          description: Initial campaign status
          type: string
          enum:
            - ACTIVE
            - PAUSED
            - ARCHIVED
            - DRAFT
      required:
        - brandAgentId
        - prompt
    GetCampaignInput:
      description: Parameters for retrieving a specific campaign
      type: object
      properties:
        campaignId:
          description: The unique identifier for the campaign
          example: cmp_987654321
          type: string
          minLength: 1
      required:
        - campaignId
    UpdateCampaignInput:
      description: Parameters for updating a campaign
      type: object
      properties:
        campaignId:
          description: The unique identifier for the campaign
          example: cmp_987654321
          type: string
          minLength: 1
        name:
          description: Updated campaign name
          type: string
          minLength: 1
          maxLength: 255
        prompt:
          description: Updated campaign prompt
          type: string
          minLength: 10
        budget:
          description: Updated budget configuration
          type: object
          properties:
            total:
              type: number
              minimum: 0
              exclusiveMinimum: true
            currency:
              default: USD
              type: string
              minLength: 3
              maxLength: 3
            dailyCap:
              type: number
              minimum: 0
              exclusiveMinimum: true
            pacing:
              type: string
              enum:
                - EVEN
                - ASAP
                - FRONTLOADED
        startDate:
          description: Updated start date
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        endDate:
          description: Updated end date
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        scoringWeights:
          description: Updated scoring weights
          type: object
          properties:
            affinity:
              type: number
              minimum: 0
              maximum: 1
            outcome:
              type: number
              minimum: 0
              maximum: 1
            quality:
              type: number
              minimum: 0
              maximum: 1
        outcomeScoreWindowDays:
          description: Updated outcome score window days
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        status:
          description: Updated campaign status
          type: string
          enum:
            - ACTIVE
            - PAUSED
            - ARCHIVED
            - DRAFT
        expectedVersion:
          description: Expected version for optimistic locking
          type: integer
          minimum: -9007199254740991
          maximum: 9007199254740991
      required:
        - campaignId
    DeleteCampaignInput:
      description: Parameters for deleting a campaign
      type: object
      properties:
        campaignId:
          description: The unique identifier for the campaign to delete
          example: cmp_987654321
          type: string
          minLength: 1
      required:
        - campaignId
    GetCampaignSummaryInput:
      type: object
      properties:
        campaignId:
          description: Campaign ID
          type: string
      required:
        - campaignId
    ListCampaignTacticsInput:
      type: object
      properties:
        campaignId:
          description: Campaign ID
          type: string
      required:
        - campaignId
    ValidateBriefInput:
      type: object
      properties:
        brief:
          description: Campaign brief text
          type: string
          minLength: 10
      required:
        - brief
    ListChannelsInput:
      type: object
      properties: {}
    AssignCreativeInput:
      type: object
      properties:
        creativeId:
          type: string
        campaignId:
          type: string
      required:
        - creativeId
        - campaignId
    CreateCreativeInput:
      type: object
      properties:
        brandAgentId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        organizationId:
          type: string
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        formatSource:
          type: string
          enum:
            - ADCP
            - CREATIVE_AGENT
            - PUBLISHER
        formatId:
          type: string
        mediaUrl:
          type: string
        assets:
          description: >-
            Optional: Upload assets inline with the creative. Each asset requires: name, contentType, data (base64), and
            assetType.
          type: array
          items:
            type: object
            properties:
              name:
                description: Filename (e.g., banner.png)
                type: string
              contentType:
                description: MIME type (e.g., image/png, image/jpeg)
                type: string
              data:
                description: Base64-encoded file data (without data:image/png;base64, prefix)
                format: byte
                type: string
              assetType:
                description: Type of asset
                type: string
                enum:
                  - image
                  - video
                  - audio
                  - logo
                  - font
              tags:
                description: Optional tags
                type: array
                items:
                  type: string
            required:
              - name
              - contentType
              - data
              - assetType
        content:
          type: object
          additionalProperties: {}
        assemblyMethod:
          type: string
          enum:
            - CREATIVE_AGENT
            - ACTIVATION
            - PUBLISHER
        campaignId:
          description: Optional campaign ID (object ID) to assign creative to
          type: string
        version:
          type: string
        registeredBy:
          type: string
      required:
        - brandAgentId
        - name
    UpdateCreativeInput:
      type: object
      properties:
        creativeId:
          type: string
        name:
          type: string
        description:
          type: string
        assetIds:
          type: array
          items:
            type: string
      required:
        - creativeId
    DeleteCreativeInput:
      type: object
      properties:
        creativeId:
          type: string
      required:
        - creativeId
    GetCreativeInput:
      type: object
      properties:
        creativeId:
          type: string
      required:
        - creativeId
    ListCreativesInput:
      type: object
      properties:
        campaignId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        brandAgentId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        formatSource:
          type: string
          enum:
            - ADCP
            - CREATIVE_AGENT
            - PUBLISHER
        status:
          type: string
          enum:
            - ACTIVE
            - PAUSED
            - ARCHIVED
            - DRAFT
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    SyncSalesAgentsInput:
      type: object
      properties:
        creativeId:
          type: string
      required:
        - creativeId
    CreateMediaBuyInput:
      type: object
      properties:
        tacticId:
          type: number
        name:
          type: string
          minLength: 1
        description:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              mediaProductId:
                type: string
              salesAgentId:
                type: string
              budgetAmount:
                type: number
                minimum: 0
                exclusiveMinimum: true
              budgetCurrency:
                type: string
              pricingCpm:
                type: number
                minimum: 0
                exclusiveMinimum: true
              pricingSignalCost:
                type: number
              displayOrder:
                type: integer
                minimum: -9007199254740991
                maximum: 9007199254740991
            required:
              - mediaProductId
              - salesAgentId
        creativeIds:
          type: array
          items:
            type: string
        budget:
          type: object
          properties:
            amount:
              type: number
              minimum: 0
              exclusiveMinimum: true
            currency:
              type: string
            dailyCap:
              type: number
              minimum: 0
              exclusiveMinimum: true
            pacing:
              type: string
              enum:
                - asap
                - even
                - front_loaded
          required:
            - amount
            - currency
            - pacing
      required:
        - tacticId
        - name
        - products
        - budget
    UpdateMediaBuyInput:
      type: object
      properties:
        mediaBuyId:
          type: string
        name:
          type: string
        description:
          type: string
        budget:
          type: object
          properties:
            amount:
              type: number
              minimum: 0
              exclusiveMinimum: true
            currency:
              type: string
            dailyCap:
              type: number
              minimum: 0
              exclusiveMinimum: true
            pacing:
              type: string
              enum:
                - asap
                - even
                - front_loaded
        status:
          type: string
          enum:
            - DRAFT
            - PENDING_APPROVAL
            - ACTIVE
            - PAUSED
            - COMPLETED
            - FAILED
            - REJECTED
        creativeIds:
          type: array
          items:
            type: string
      required:
        - mediaBuyId
    DeleteMediaBuyInput:
      type: object
      properties:
        mediaBuyId:
          type: string
      required:
        - mediaBuyId
    ExecuteMediaBuyInput:
      type: object
      properties:
        mediaBuyId:
          type: string
      required:
        - mediaBuyId
    GetMediaBuyInput:
      type: object
      properties:
        mediaBuyId:
          type: string
      required:
        - mediaBuyId
    ListMediaBuysInput:
      type: object
      properties:
        tacticId:
          type: number
        status:
          type: string
          enum:
            - DRAFT
            - PENDING_APPROVAL
            - ACTIVE
            - PAUSED
            - COMPLETED
            - FAILED
            - REJECTED
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    ValidateMediaBuyBudgetInput:
      type: object
      properties:
        tacticId:
          type: number
        newBudgetAmount:
          type: number
          minimum: 0
          exclusiveMinimum: true
      required:
        - tacticId
        - newBudgetAmount
    ListNotificationsInput:
      type: object
      properties:
        read:
          type: boolean
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    MarkNotificationReadInput:
      type: object
      properties:
        notificationId:
          type: string
      required:
        - notificationId
    MarkNotificationAcknowledgedInput:
      type: object
      properties:
        notificationId:
          type: string
      required:
        - notificationId
    MarkAllNotificationsReadInput:
      type: object
      properties: {}
    DiscoverProductsInput:
      type: object
      properties:
        campaignBrief:
          type: string
        brandManifestUrl:
          type: string
        deliveryType:
          type: string
          enum:
            - guaranteed
            - non_guaranteed
        formats:
          type: array
          items:
            type: string
            enum:
              - audio
              - display
              - html5
              - native
              - video
        inventoryType:
          type: string
          enum:
            - premium
            - run_of_site
            - targeted_package
        maxCpm:
          type: number
          minimum: 0
          exclusiveMinimum: true
        minCpm:
          type: number
          minimum: 0
          exclusiveMinimum: true
        publisherIds:
          type: array
          items:
            type: string
        salesAgentId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
    SaveProductInput:
      type: object
      properties:
        productId:
          type: string
        name:
          type: string
        description:
          type: string
        publisherId:
          type: string
        publisherName:
          type: string
        deliveryType:
          type: string
          enum:
            - guaranteed
            - non_guaranteed
        inventoryType:
          type: string
          enum:
            - premium
            - run_of_site
            - targeted_package
        creativeFormats:
          anyOf:
            - type: array
              items:
                type: string
            - type: array
              items:
                type: object
                properties:
                  agent_url:
                    type: string
                  id:
                    type: string
                required:
                  - agent_url
                  - id
        pricingModel:
          type: string
          enum:
            - auction
            - fixed_cpm
        fixedCpm:
          type: number
          minimum: 0
          exclusiveMinimum: true
        floorCpm:
          type: number
          minimum: 0
          exclusiveMinimum: true
        targetCpm:
          type: number
          minimum: 0
          exclusiveMinimum: true
        pricingOptions:
          type: array
          items:
            type: object
            additionalProperties: {}
        supportedTargeting:
          type: array
          items:
            type: string
        adcpAgentId:
          type: string
      required:
        - productId
        - name
        - description
        - publisherId
        - publisherName
        - deliveryType
        - inventoryType
        - pricingModel
    ListProductsInput:
      type: object
      properties:
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    SyncProductsInput:
      type: object
      properties:
        sourceId:
          type: string
      required:
        - sourceId
    GetSalesAgentInput:
      type: object
      properties:
        agentId:
          type: string
      required:
        - agentId
    ListSalesAgentsInput:
      type: object
      properties: {}
    RegisterSalesAgentInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
        endpointUrl:
          type: string
          format: uri
        protocol:
          type: string
          enum:
            - MCP
            - A2A
        authenticationType:
          type: string
          enum:
            - API_KEY
            - OAUTH
            - NO_AUTH
        organizationId:
          type: string
        authConfig:
          type: object
          additionalProperties: {}
      required:
        - name
        - endpointUrl
        - protocol
        - authenticationType
    UnregisterSalesAgentInput:
      type: object
      properties:
        agentId:
          type: string
      required:
        - agentId
    UpdateSalesAgentInput:
      type: object
      properties:
        agentId:
          type: string
        name:
          type: string
        organization:
          type: string
      required:
        - agentId
    ListSalesAgentAccountsInput:
      type: object
      properties:
        agentId:
          type: string
      required:
        - agentId
    RegisterSalesAgentAccountInput:
      type: object
      properties:
        salesAgentId:
          type: string
        accountIdentifier:
          type: string
        authConfig:
          type: object
          additionalProperties: {}
      required:
        - salesAgentId
        - accountIdentifier
    UnregisterSalesAgentAccountInput:
      type: object
      properties:
        accountId:
          type: string
      required:
        - accountId
    UpdateSalesAgentAccountInput:
      type: object
      properties:
        accountId:
          type: string
        accountData:
          type: object
          additionalProperties: {}
      required:
        - accountId
        - accountData
    CreateTacticInput:
      type: object
      properties:
        campaignId:
          type: string
        name:
          type: string
          minLength: 1
        prompt:
          type: string
        channelCodes:
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        countryCodes:
          type: array
          items:
            type: string
      required:
        - campaignId
        - name
    UpdateTacticInput:
      type: object
      properties:
        tacticId:
          type: number
        name:
          type: string
        prompt:
          type: string
        channelCodes:
          type: array
          items:
            type: string
            enum:
              - ctv
              - video
              - display
              - app
              - social
        countryCodes:
          type: array
          items:
            type: string
      required:
        - tacticId
    DeleteTacticInput:
      type: object
      properties:
        tacticId:
          type: number
      required:
        - tacticId
    GetTacticInput:
      type: object
      properties:
        tacticId:
          type: number
      required:
        - tacticId
    ListTacticsInput:
      type: object
      properties:
        campaignId:
          type: string
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    LinkCampaignToTacticInput:
      type: object
      properties:
        tacticId:
          type: number
        campaignId:
          type: string
      required:
        - tacticId
        - campaignId
    UnlinkCampaignFromTacticInput:
      type: object
      properties:
        tacticId:
          type: number
        campaignId:
          type: string
      required:
        - tacticId
        - campaignId
    RegisterWebhookInput:
      type: object
      properties:
        brandAgentId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        endpoint:
          type: object
          properties:
            url:
              type: string
              format: uri
            method:
              type: string
              enum:
                - POST
                - PUT
            headers:
              type: object
              additionalProperties:
                type: string
            authentication:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - bearer
                    - basic
                    - hmac
                credentials:
                  type: string
              required:
                - type
                - credentials
          required:
            - url
            - method
        eventTypes:
          type: array
          items:
            type: string
        filters:
          type: object
          properties:
            campaigns:
              type: array
              items:
                type: string
            tactics:
              type: array
              items:
                type: string
            creatives:
              type: array
              items:
                type: string
            mediaBuys:
              type: array
              items:
                type: string
            metrics:
              type: array
              items:
                type: string
            minSeverity:
              type: string
              enum:
                - info
                - warning
                - critical
        retryPolicy:
          type: object
          properties:
            maxRetries:
              type: integer
              minimum: 0
              maximum: 9007199254740991
            backoffMultiplier:
              type: number
              minimum: 0
              exclusiveMinimum: true
            maxBackoffSeconds:
              type: number
              minimum: 0
              exclusiveMinimum: true
      required:
        - endpoint
        - eventTypes
    ListWebhooksInput:
      type: object
      properties:
        take:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        skip:
          type: integer
          minimum: 0
          maximum: 9007199254740991
    DeleteWebhookInput:
      type: object
      properties:
        webhookId:
          type: string
      required:
        - webhookId
    BrandAgentUpdate:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        description:
          type: string
        manifestUrl:
          type: string
          format: uri
        customerId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - customerId
        - createdAt
        - updatedAt
    BrandStandardsCreate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        countryCodes:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        brands:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - countryCodes
        - channelCodes
        - brands
        - createdAt
        - updatedAt
    CampaignUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt
    CreativeGet:
      type: object
      properties:
        creativeId:
          type: string
        name:
          type: string
        status:
          type: string
        campaignId:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - creativeId
        - name
        - status
        - createdAt
        - updatedAt
    MediaBuyGet:
      type: object
      properties:
        id:
          type: string
        tacticId:
          type: number
        status:
          type: string
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - tacticId
        - status
        - createdAt
        - updatedAt
    TacticGet:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        prompt:
          type: string
        campaignIds:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        countryCodes:
          type: array
          items:
            type: string
        mediaBuyCount:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - channelCodes
        - countryCodes
        - createdAt
        - updatedAt
    MCPContent:
      type: object
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
      required:
        - type
        - text
      additionalProperties: false
    BadRequest:
      description: Bad request error response
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
      additionalProperties: false
    Unauthorized:
      description: Unauthorized error response
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
      additionalProperties: false
    InternalError:
      description: Internal server error response
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
      additionalProperties: false
    AssetList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              assetId:
                type: string
              originalFilename:
                type: string
              assetType:
                type: string
              size:
                type: number
              brandAgentId:
                type: string
              customerId:
                type: integer
                exclusiveMinimum: true
                maximum: 9007199254740991
              signedUrl:
                type: string
              tags:
                type: array
                items:
                  type: string
            required:
              - assetId
              - originalFilename
              - assetType
              - size
              - brandAgentId
              - customerId
              - signedUrl
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    BrandAgentList:
      type: object
      properties:
        brandAgents:
          type: array
          items:
            $ref: '#/components/schemas/BrandAgentUpdateOutput'
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - brandAgents
        - total
      additionalProperties: false
    BrandAgentDelete:
      type: object
      properties:
        success:
          type: boolean
        deletedId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
      required:
        - success
        - deletedId
      additionalProperties: false
    BrandStandardsDelete:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
      required:
        - success
        - id
      additionalProperties: false
    BrandStandardsList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            $ref: '#/components/schemas/BrandStandardsCreateOutput'
      required:
        - total
        - items
      additionalProperties: false
    BrandStoryCreate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        brandAgentId:
          type: string
        countryCodes:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        brands:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - createdAt
        - updatedAt
      additionalProperties: false
    BrandStoryUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        prompt:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - createdAt
        - updatedAt
      additionalProperties: false
    BrandStoryDelete:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
      required:
        - success
        - id
      additionalProperties: false
    BrandStoryList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              status:
                type: string
              type:
                type: string
              createdAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
              updatedAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
            required:
              - id
              - name
              - status
              - type
              - createdAt
              - updatedAt
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    CampaignList:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignUpdateOutput'
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - campaigns
        - total
      additionalProperties: false
    CampaignDelete:
      type: object
      properties:
        success:
          type: boolean
        deletedId:
          type: string
      required:
        - success
        - deletedId
      additionalProperties: false
    CampaignGetSummary:
      type: object
      properties:
        campaignId:
          type: string
        summary:
          type: object
          additionalProperties: {}
      required:
        - campaignId
        - summary
      additionalProperties: false
    CampaignListTactics:
      type: object
      properties:
        tactics:
          type: array
          items: {}
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - tactics
        - total
      additionalProperties: false
    CampaignValidateBrief:
      type: object
      properties:
        valid:
          type: boolean
        feedback:
          type: string
      required:
        - valid
      additionalProperties: false
    ChannelList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              channel:
                type: string
              displayName:
                type: string
            required:
              - channel
              - displayName
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    CreativeAssign:
      type: object
      properties:
        success:
          type: boolean
        creativeId:
          type: string
        campaignId:
          type: string
      required:
        - success
        - creativeId
        - campaignId
      additionalProperties: false
    CreativeDelete:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
      required:
        - success
        - id
      additionalProperties: false
    CreativeList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreativeGetOutput'
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - items
        - total
      additionalProperties: false
    CreativeSyncSalesAgents:
      type: object
      properties:
        success:
          type: boolean
        creativeId:
          type: string
        campaignId:
          type: string
      required:
        - success
        - creativeId
      additionalProperties: false
    MediaBuyDelete:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
      required:
        - success
        - id
      additionalProperties: false
    MediaBuyExecute:
      type: object
      properties:
        success:
          type: boolean
        mediaBuyId:
          type: string
        status:
          type: string
        adcpMediaBuyId:
          type: string
        adcpStatus:
          type: string
      required:
        - success
        - mediaBuyId
        - status
      additionalProperties: false
    MediaBuyList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            $ref: '#/components/schemas/MediaBuyGetOutput'
      required:
        - total
        - items
      additionalProperties: false
    MediaBuyValidateBudget:
      type: object
      properties:
        valid:
          type: boolean
        message:
          type: string
      required:
        - valid
      additionalProperties: false
    NotificationsList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        hasMore:
          type: boolean
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              data:
                type: object
                additionalProperties: {}
              read:
                type: boolean
              acknowledged:
                type: boolean
              createdAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
            required:
              - id
              - type
              - data
              - read
              - acknowledged
              - createdAt
            additionalProperties: false
      required:
        - total
        - hasMore
        - items
      additionalProperties: false
    NotificationsMarkRead:
      type: object
      properties:
        success:
          type: boolean
        notificationId:
          type: string
      required:
        - success
        - notificationId
      additionalProperties: false
    NotificationsMarkAcknowledged:
      type: object
      properties:
        success:
          type: boolean
        notificationId:
          type: string
      required:
        - success
        - notificationId
      additionalProperties: false
    NotificationsMarkAllRead:
      type: object
      properties:
        success:
          type: boolean
        count:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - success
        - count
      additionalProperties: false
    MediaProductDiscover:
      type: object
      properties:
        success:
          type: boolean
        productsFound:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        productsSaved:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        successfulAgents:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        failedAgents:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              name:
                type: string
              publisherName:
                type: string
              salesAgentId:
                type: string
              salesAgentName:
                type: string
              deliveryType:
                type: string
                enum:
                  - guaranteed
                  - non_guaranteed
              inventoryType:
                type: string
                enum:
                  - premium
                  - run_of_site
                  - targeted_package
              creativeFormats:
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      type: object
                      properties:
                        agent_url:
                          type: string
                        id:
                          type: string
                      required:
                        - agent_url
                        - id
                      additionalProperties: false
              fixedCpm:
                type: number
              floorCpm:
                type: number
              targetCpm:
                type: number
            required:
              - productId
              - name
              - publisherName
              - deliveryType
              - inventoryType
            additionalProperties: false
      required:
        - success
        - productsFound
        - productsSaved
        - successfulAgents
        - failedAgents
        - products
      additionalProperties: false
    MediaProductSave:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        name:
          type: string
        publisherId:
          type: string
        publisherName:
          type: string
        customerId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - productId
        - name
        - publisherId
        - publisherName
        - customerId
        - createdAt
        - updatedAt
      additionalProperties: false
    MediaProductList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              productId:
                type: string
              name:
                type: string
              salesAgent:
                type: string
              salesAgentId:
                type: string
              salesAgentName:
                type: string
              deliveryType:
                type: string
                enum:
                  - guaranteed
                  - non_guaranteed
              format:
                type: string
              creativeFormats:
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      type: object
                      properties:
                        agent_url:
                          type: string
                        id:
                          type: string
                      required:
                        - agent_url
                        - id
                      additionalProperties: false
            required:
              - id
              - productId
              - name
              - deliveryType
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    MediaProductSync:
      type: object
      properties:
        success:
          type: boolean
        productsSaved:
          type: integer
          minimum: 0
          maximum: 9007199254740991
      required:
        - success
        - productsSaved
      additionalProperties: false
    SalesAgentGet:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        status:
          type: string
        relationship:
          type: string
        endpointUrl:
          type: string
        protocol:
          type: string
        authenticationType:
          type: string
        description:
          type: string
        customerAccountCount:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        organizationId:
          type: string
        registeredBy:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - status
        - relationship
        - endpointUrl
        - protocol
        - authenticationType
        - customerAccountCount
        - createdAt
        - updatedAt
      additionalProperties: false
    SalesAgentList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                exclusiveMinimum: true
                maximum: 9007199254740991
              name:
                type: string
              status:
                type: string
              relationship:
                type: string
              endpointUrl:
                type: string
              protocol:
                type: string
              customerAccountCount:
                type: integer
                minimum: 0
                maximum: 9007199254740991
            required:
              - id
              - name
              - status
              - relationship
              - endpointUrl
              - protocol
              - customerAccountCount
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    SalesAgentRegister:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        status:
          type: string
        endpointUrl:
          type: string
      required:
        - id
        - name
        - status
        - endpointUrl
      additionalProperties: false
    SalesAgentUnregister:
      type: object
      properties:
        success:
          type: boolean
        id:
          type: string
      required:
        - success
        - id
      additionalProperties: false
    SalesAgentUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
      required:
        - id
        - name
        - status
      additionalProperties: false
    SalesAgentAccountList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              accountIdentifier:
                type: string
              status:
                type: string
              registeredBy:
                type: string
              createdAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
              updatedAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
            required:
              - id
              - accountIdentifier
              - status
              - createdAt
              - updatedAt
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    SalesAgentAccountRegister:
      type: object
      properties:
        accountId:
          type: string
        adcpAgentId:
          type: string
        status:
          type: string
      required:
        - accountId
        - adcpAgentId
        - status
      additionalProperties: false
    SalesAgentAccountUnregister:
      type: object
      properties:
        success:
          type: boolean
        salesAgentId:
          type: string
      required:
        - success
        - salesAgentId
      additionalProperties: false
    SalesAgentAccountUpdate:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
      required:
        - id
        - status
      additionalProperties: false
    TacticCreate:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        prompt:
          type: string
        campaignId:
          type: string
        channelCodes:
          type: array
          items:
            type: string
        countryCodes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - campaignId
        - channelCodes
        - countryCodes
        - createdAt
      additionalProperties: false
    TacticDelete:
      type: object
      properties:
        success:
          type: boolean
        tacticId:
          type: number
      required:
        - success
        - tacticId
      additionalProperties: false
    TacticList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            $ref: '#/components/schemas/TacticGetOutput'
      required:
        - total
        - items
      additionalProperties: false
    TacticLinkCampaign:
      type: object
      properties:
        success:
          type: boolean
        tacticId:
          type: number
        campaignId:
          type: string
      required:
        - success
        - tacticId
        - campaignId
      additionalProperties: false
    TacticUnlinkCampaign:
      type: object
      properties:
        success:
          type: boolean
        tacticId:
          type: number
        campaignId:
          type: string
      required:
        - success
        - tacticId
        - campaignId
      additionalProperties: false
    WebhookRegister:
      type: object
      properties:
        id:
          type: string
        brandAgentId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        endpoint:
          type: object
          properties:
            url:
              type: string
            method:
              type: string
            authenticationType:
              type: string
          required:
            - url
            - method
          additionalProperties: false
        eventTypes:
          type: array
          items:
            type: string
        filters:
          type: object
          properties:
            campaigns:
              type: array
              items:
                type: string
            tactics:
              type: array
              items:
                type: string
            creatives:
              type: array
              items:
                type: string
            mediaBuys:
              type: array
              items:
                type: string
            metrics:
              type: array
              items:
                type: string
            minSeverity:
              type: string
          additionalProperties: false
        retryPolicy:
          type: object
          properties:
            maxRetries:
              type: integer
              minimum: 0
              maximum: 9007199254740991
            backoffMultiplier:
              type: number
              minimum: 0
              exclusiveMinimum: true
            maxBackoffSeconds:
              type: number
              minimum: 0
              exclusiveMinimum: true
          required:
            - maxRetries
            - backoffMultiplier
            - maxBackoffSeconds
          additionalProperties: false
        status:
          type: string
        testResult:
          type: object
          properties:
            success:
              type: boolean
            statusCode:
              type: integer
              minimum: -9007199254740991
              maximum: 9007199254740991
            error:
              type: string
          required:
            - success
          additionalProperties: false
      required:
        - id
        - endpoint
        - eventTypes
        - retryPolicy
        - status
        - testResult
      additionalProperties: false
    WebhookList:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              status:
                type: string
              endpoint:
                type: object
                properties:
                  url:
                    type: string
                  method:
                    type: string
                  authenticationType:
                    type: string
                required:
                  - url
                  - method
                additionalProperties: false
              eventTypes:
                type: array
                items:
                  type: string
              brandAgentId:
                type: integer
                exclusiveMinimum: true
                maximum: 9007199254740991
              failureCount:
                type: integer
                minimum: 0
                maximum: 9007199254740991
              lastSuccess:
                nullable: true
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
              lastFailure:
                nullable: true
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
              createdAt:
                type: string
                format: date-time
                pattern: >-
                  ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
            required:
              - id
              - status
              - endpoint
              - eventTypes
              - failureCount
              - createdAt
            additionalProperties: false
      required:
        - total
        - items
      additionalProperties: false
    WebhookDelete:
      type: object
      properties:
        success:
          type: boolean
        webhookId:
          type: string
      required:
        - success
        - webhookId
      additionalProperties: false
    BrandAgentUpdateOutput:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        description:
          type: string
        manifestUrl:
          type: string
          format: uri
        customerId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - customerId
        - createdAt
        - updatedAt
      additionalProperties: false
    BrandStandardsCreateOutput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        countryCodes:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        brands:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - countryCodes
        - channelCodes
        - brands
        - createdAt
        - updatedAt
      additionalProperties: false
    CampaignUpdateOutput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    CreativeGetOutput:
      type: object
      properties:
        creativeId:
          type: string
        name:
          type: string
        status:
          type: string
        campaignId:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - creativeId
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    MediaBuyGetOutput:
      type: object
      properties:
        id:
          type: string
        tacticId:
          type: number
        status:
          type: string
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - tacticId
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    TacticGetOutput:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        prompt:
          type: string
        campaignIds:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        countryCodes:
          type: array
          items:
            type: string
        mediaBuyCount:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - channelCodes
        - countryCodes
        - createdAt
        - updatedAt
      additionalProperties: false
    BrandAgentGet:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        description:
          type: string
        manifestUrl:
          type: string
          format: uri
        customerId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - customerId
        - createdAt
        - updatedAt
      additionalProperties: false
    BrandAgentCreate:
      type: object
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        name:
          type: string
        description:
          type: string
        manifestUrl:
          type: string
          format: uri
        customerId:
          type: integer
          exclusiveMinimum: true
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - customerId
        - createdAt
        - updatedAt
      additionalProperties: false
    CampaignCreate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    CampaignGet:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    CreativeCreate:
      type: object
      properties:
        creativeId:
          type: string
        name:
          type: string
        status:
          type: string
        campaignId:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - creativeId
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    CreativeUpdate:
      type: object
      properties:
        creativeId:
          type: string
        name:
          type: string
        status:
          type: string
        campaignId:
          type: string
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - creativeId
        - name
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    MediaBuyCreate:
      type: object
      properties:
        id:
          type: string
        tacticId:
          type: number
        status:
          type: string
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - tacticId
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    MediaBuyUpdate:
      type: object
      properties:
        id:
          type: string
        tacticId:
          type: number
        status:
          type: string
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - tacticId
        - status
        - createdAt
        - updatedAt
      additionalProperties: false
    TacticUpdate:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        prompt:
          type: string
        campaignIds:
          type: array
          items:
            type: string
        channelCodes:
          type: array
          items:
            type: string
        countryCodes:
          type: array
          items:
            type: string
        mediaBuyCount:
          type: integer
          minimum: 0
          maximum: 9007199254740991
        createdAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        updatedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
        archivedAt:
          type: string
          format: date-time
          pattern: >-
            ^(?:(?:\d\d[2468][048]|\d\d[13579][26]|\d\d0[48]|[02468][048]00|[13579][26]00)-02-29|\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\d|30)|(?:02)-(?:0[1-9]|1\d|2[0-8])))T(?:(?:[01]\d|2[0-3]):[0-5]\d(?::[0-5]\d(?:\.\d+)?)?(?:Z))$
      required:
        - id
        - name
        - channelCodes
        - countryCodes
        - createdAt
        - updatedAt
      additionalProperties: false
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
